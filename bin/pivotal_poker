#!/usr/bin/env coffee
##
# pivotal_poker [options]
#
# Launch the Pivotal Poker server
#

require.paths.unshift __dirname + '/../node_modules'
require.paths.unshift __dirname + '/../src'
require('zappa') ->
  @basedir = __dirname + '/../'
  @enable 'serve jquery'
  @use 'logger', static: @basedir + 'public'

  @helper test: -> 'TEST'

  @get '/': ->
    @render 'index'

  @on login: ->
    @client.nickname = @data.nickname
    @emit login:      {id: @client.nickname, nickname: @client.nickname}
    @emit join:       {id: @client.nickname, nickname: @client.nickname}
    @broadcast join:  {id: @client.nickname, nickname: @client.nickname}

  @on logout: ->
    oldNickname = @client.nickname
    @client.nickname = null
    @emit 'logout'
    @emit leave:      {id: oldNickname}
    @broadcast leave: {id: oldNickname}

  @on disconnect: ->
    @broadcast leave: {id: @client.nickname}

  @coffee 
    # Backbone

    '/app/models/user.js': ->
      class User extends Backbone.Model   
      window.User = User
  
    '/app/collections/users.js': ->
      class Users extends Backbone.Collection
        model: User
        comparator: (user) -> user.get 'nickname'
      
      window.Users = Users
    
    '/app/views/user_view.js': ->
      class UserView extends Backbone.View
        tagName: 'li'
        className: 'user'
        
        initialize: ->
          _.bindAll(@, 'render')

        render: ->
          status = @model.get('status') ? 'voting'
          $(@el).html """
            #{@model.get 'nickname'}
            - #{status}
          """
          $(@el).addClass status
          @

      
      window.UserView = UserView

    '/app/views/users_view.js': ->
      class UsersView extends Backbone.View
        initialize: ->
          _.bindAll(@, 'render')
          @collection.bind('add',    @render)
          @collection.bind('remove', @render)
          @collection.bind('reset',  @render)
        
        render: ->
          $(@el).html '''
            <h2>Users</h2>
            <ul class='users'></ul>
          '''

          @collection.each (user) =>
            view = new UserView
              model: user
              collection: @collection
            @.$('ul').append view.render().el
          
          @
      
      window.UsersView = UsersView

    '/app/controllers/application.js': ->
      class Application
        start: ->
          console.log 'App started'

          @users = new Users

          # Create your controllers here...
          @users_view = new UsersView 
            el: $('#users')
            collection: @users
          
          @add_user id: 'Rein',   nickname: 'Rein'
          @add_user id: 'John',   nickname: 'John'
          @add_user id: 'Bob',    nickname: 'Bob'
          @add_user id: 'Maciej', nickname: 'Maciej'

          @users_view.render()
          
          # Then start backbone
          # Backbone.history.start()
        
        add_user:    (data)     -> @users.add data
        remove_user: (id) -> @users.remove @users.get(id)
    
      window.Application = Application       

  @client '/js/index.js': ->
    
    @connect()

    @on login: ->
      $('#user-info').html """
        Welcome #{@data.nickname}!
        <button id='logout' class='btn' type='submit'>Sign Out</button>
      """
    
    @on join: -> window.app.add_user @data

    @on logout: ->
      $('#user-info').html '''
        <form id='login' action:''>
          <input class='input-small' type='text' placeholder='Username'/>
          <button class='btn' type='submit'>Sign In</button>
        </form>
      '''
    
    @on leave: -> window.app.remove_user @data.id

    $ =>
      window.app = new Application
      window.app.start()

      $('#logout').live 'click', (e) =>
        @emit 'logout'
        $('#chat-input button').attr disabled: true
        e.preventDefault()

      $('#login button').live 'click', (e) =>
        @emit login: {nickname: $('#login input').val()}
        $('#chat-input button').attr disabled: false
        e.preventDefault()

      $('#chat-input button').click (e) =>
        @emit said: {text: $('#box').val()}
        $('#box').val('').focus()
        e.preventDefault()

  @view layout: ->
    doctype 5
    html ->
      head ->
        title @title or 'Pivotal Poker'
        script src: '/socket.io/socket.io.js'
        script src: '/zappa/jquery.js'
        script src: '/zappa/zappa.js'
        
        script src: 'js/lib/json2.js'
        script src: 'http://documentcloud.github.com/underscore/underscore-min.js'
        script src: 'http://documentcloud.github.com/backbone/backbone-min.js'

        script src: '/app/models/user.js'
        script src: '/app/collections/users.js'
        script src: '/app/controllers/application.js'
        script src: '/app/views/user_view.js'
        script src: '/app/views/users_view.js'

        script src: '/js/index.js'

        link rel: 'stylesheet', href: 'http://twitter.github.com/bootstrap/1.3.0/bootstrap.min.css'
        link rel: 'stylesheet', href: '/css/site.css'
      body -> 
        div class: 'topbar', ->
          div class: 'fill', ->
            div class: 'container', ->
              a class: 'brand', href: '/', -> @title or 'Pivotal Poker'

              ul class: 'nav', ->
                li class:'active', ->
                  a href:'#', -> 'Home'
                li  ->
                  a href:'#', -> 'About'
                li  ->
                  a href:'#', -> 'Contact'
              div id: 'user-info', class: 'pull-right', ->
                form id:'login',  action:'', ->
                  input class:'input-small', type:'text', placeholder:'Username'
                  button class:'btn', type:'submit', -> 'Sign in'

        div class: 'container', ->
          div class: 'content', -> @body

  @view index: ->
    div class: 'page-header', ->
      h1 -> 'Pivotal Poker'
    div class: 'row', ->
      div class: 'span10', ->
        div class: 'story', ->
          h2 "Story: Reconfigure apache on all boxes with redis logging"
      div class: 'span4', ->
        div id: 'users'
        
# vim:ft=coffee ts=2 sw=2 et :

